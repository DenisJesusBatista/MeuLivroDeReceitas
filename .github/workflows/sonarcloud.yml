name: SonarCloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4  # Atualização para a versão 4 que suporta Node.js 20
        with:
          java-version: 17
          distribution: 'zulu' # Opções de distribuição alternativas estão disponíveis.
      - uses: actions/checkout@v4  # Atualização para a versão 4 que suporta Node.js 20
        with:
          fetch-depth: 0  # Clones rasos devem ser desativados para uma melhor relevância da análise
      - name: Cache SonarCloud packages
        uses: actions/cache@v4  # Atualização para a versão 4 que suporta Node.js 20
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4  # Atualização para a versão 4 que suporta Node.js 20
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path C:\sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path C:\sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Necessário para obter informações sobre PR, se houver
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          C:\.sonar\scanner\dotnet-sonarscanner begin /k:"denisjesusgit_denisjesus" /o:"denisjesusgit" /c:sonar.token="${{ secrets.SONAR_TOKEN }}" /c:sonar.host.url="https://sonarcloud.io"          
          dotnet test /p:CollectCoverade=true /p:CoverletOutputFormat=opencover trx
          C:\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
